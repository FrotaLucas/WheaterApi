@page "/"
@using WheaterApi.Model.Wheater
@inject ITemperatureService TemperatureService
@inject IJSRuntime JSRuntime


@* Why there's no browser JavaScript logs for your Console.WriteLine() ?
    In Blazor Server, code runs on the server, not the browser. *@

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<div>

    <h2>Temperature</h2>

    @* <h3>@response.TimeZone</h3> *@



    <input @bind="inputCity" placeholder="enter the city" />
    <button @onclick="FindTemperature">Click</button>



    <div>
            <label>Latitude</label>
            <div>@TemperatureService.Data.Latitude</div>

            <label>Longitude</label> <!-- Corrigi label duplicado -->
            <div>@TemperatureService.Data.Longitude</div>
            
            @if( TemperatureService.Data !=null && TemperatureService.Data.TemperatureDate != null &&
                TemperatureService.Data.TemperatureDate.Temperature.Any() )
                @foreach (var item in TemperatureService.Data.TemperatureDate.Temperature)
                {
                    <div>@item</div>
                }
        </div>



</div>

@* 
<MainComponent/> *@

@code{
    string inputCity = "Berlin";
    //private ResponseWheater response = null;

    // protected async override void OnInitialized()
    // {
    //     await FindTemperature();
    //     //ProductService.ProductsChanged += StateHasChanged;
    //     TemperatureService.TemperatureChanged += StateHasChanged;
    // }

    protected override async Task OnInitializedAsync()
    {
        TemperatureService.TemperatureChanged += StateHasChanged;
        await FindTemperature();
    }


    // public void Dispose()
    // {
    //     //ProductService.ProductsChanged -= StateHasChanged;
    //     TemperatureService.TemperatureChanged -= StateHasChanged;
    // }

    public void Dispose()
    {
        TemperatureService.TemperatureChanged -= StateHasChanged;
    }

    // protected async Task FindTemperature()
    // {

    //     Console.WriteLine("click event");
    //     await TemperatureService.UpdateApi("Berlin");
    //     //response = TemperatureService.Data;
    // }

    protected async Task FindTemperature()
    {
        await TemperatureService.UpdateApi(inputCity);
        StateHasChanged(); // força renderização. Talvez nao precise disso
    }


}